
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'eclipse'

group= "de.outinetworks.InfoMod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "InfoMod"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

def modversion = "${project.config.mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")

// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here
minecraft {
    version = config.mcversion + "-" + config.forge_version
    mappings = config.mappings
    runDir = "run"
    replace '${mod_version}', modversion
    makeObfSourceJar = false
}

version = project.minecraft.version + "-" + modversion

dependencies {
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", modversion
    inputs.property "mcversion", project.config.mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'mod_version': modversion, 'mcversion': project.config.mcversion
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
